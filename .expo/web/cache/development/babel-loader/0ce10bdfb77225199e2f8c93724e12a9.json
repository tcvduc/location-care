{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar dotCSSInfo = {\n  width: 10,\n  height: 10,\n  unit: \"px\"\n};\nvar inputTypePasswordCSSInfo = {\n  width: 200,\n  height: 100,\n  unit: \"px\"\n};\nvar caretCSSInfo = {};\n\nvar AuroraPasswordInput = function (_HTMLElement) {\n  _inherits(AuroraPasswordInput, _HTMLElement);\n\n  var _super = _createSuper(AuroraPasswordInput);\n\n  function AuroraPasswordInput() {\n    var _this;\n\n    _classCallCheck(this, AuroraPasswordInput);\n\n    _this = _super.call(this);\n\n    _this.manageAuroraPasswordInputShadowRootCSS = function () {\n      var style = document.createElement(\"style\");\n      var auroraPasswordInputShadowRoot = document.getElementsByTagName(\"aurora-password-input\")[0].shadowRoot;\n      var styleTextContent = \"\\n    .input_type_password{\\n      width:\" + inputTypePasswordCSSInfo.width + inputTypePasswordCSSInfo.unit + \";\\n      height:\" + inputTypePasswordCSSInfo.height + inputTypePasswordCSSInfo.unit + \";\\n      position:relative;\\n      color:transparent;\\n    }\\n\\n    .caret{\\n      width:1px;\\n      height:10px;\\n      background-image: linear-gradient(to right, #00FF2F, #34EFC3,#94FFDA);\\n    }\\n    \\n    .dotsContainer{\\n      display:flex;\\n      padding:12px;\\n      position:absolute;\\n      top:2px;\\n      left:0;\\n      z-index: 10;\\n    }\\n    \\n    \";\n      style.textContent = styleTextContent;\n\n      _this.shadow.appendChild(style);\n    };\n\n    _this.handleOninputPassword = function (inputTypePassword, shadowDotsContainer, caret, dotsContainer) {\n      var dotsWidth = 0;\n      var isDotFull = false;\n      var caretIndex = 0;\n      shadowDotsContainer.appendChild(caret);\n\n      inputTypePassword.oninput = function (event) {\n        var inputTypePasswordWidth = inputTypePasswordCSSInfo.width;\n        var inputTypePasswordHeight = inputTypePasswordCSSInfo.height;\n\n        var dot = _this.createOneAuroraDot();\n\n        var elementInDotsContainers = shadowDotsContainer.children;\n        var arrayFromElementInDotsContainers = Array.prototype.slice.call(elementInDotsContainers);\n        console.log(\"arrayFromElementInDotsContainers: \", arrayFromElementInDotsContainers);\n\n        _this.swap(arrayFromElementInDotsContainers, caretIndex, caretIndex + 1);\n\n        for (var i = arrayFromElementInDotsContainers.length - 1; i >= 0; --i) {\n          console.log(arrayFromElementInDotsContainers[i]);\n        }\n\n        if (dotsWidth < inputTypePasswordWidth) {\n          shadowDotsContainer.appendChild(dot);\n        }\n      };\n    };\n\n    _this.createCaret = function () {\n      var caret = document.createElement(\"div\");\n      var increasingNumber = 530;\n      caret.classList.add(\"caret\");\n      setInterval(function () {\n        caret.classList.remove(\"caret\");\n      }, increasingNumber);\n      setInterval(function () {\n        caret.classList.add(\"caret\");\n      }, increasingNumber + increasingNumber);\n      return caret;\n    };\n\n    _this.swap = function (a, i, j) {\n      var temporary = a[i];\n      a[i] = a[j];\n      a[j] = temporary;\n    };\n\n    _this.handleCaretMovePosition = function () {};\n\n    _this.createOneAuroraDot = function () {\n      var styles = \"\\n      height: \" + dotCSSInfo.height + dotCSSInfo.unit + \";\\n      width: \" + dotCSSInfo.width + dotCSSInfo.unit + \";\\n      background-image: linear-gradient(to right, #00FF2F, #34EFC3,#94FFDA);\\n      clip-path: circle(30%);\\n    \";\n      var dot = document.createElement(\"div\");\n      dot.style = styles;\n      return dot;\n    };\n\n    var shadow = _this.attachShadow({\n      mode: \"open\"\n    });\n\n    _this.shadow = shadow;\n\n    _this.manageAuroraPasswordInputShadowRootCSS();\n\n    var _shadowDotsContainer = document.createElement(\"div\");\n\n    _shadowDotsContainer.classList.add(\"dotsContainer\");\n\n    var dotsContainer = document.createElement(\"div\");\n\n    var _inputTypePassword = document.createElement(\"input\");\n\n    _inputTypePassword.type = \"password\";\n\n    _inputTypePassword.classList.add(\"input_type_password\");\n\n    var _caret = _this.createCaret();\n\n    shadow.appendChild(_shadowDotsContainer);\n    shadow.appendChild(_inputTypePassword);\n    shadow.appendChild(_caret);\n\n    _this.handleOninputPassword(_inputTypePassword, _shadowDotsContainer, _caret, dotsContainer);\n\n    return _this;\n  }\n\n  return _createClass(AuroraPasswordInput);\n}(_wrapNativeSuper(HTMLElement));\n\ncustomElements.define(\"aurora-password-input\", AuroraPasswordInput);\n\nvar AuroraPasswordInputComponent = function AuroraPasswordInputComponent() {\n  return _jsx(View, {});\n};\n\nexport default AuroraPasswordInputComponent;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/location-care/components/AuroraPasswordInput/AuroraPasswordInput.tsx"],"names":["dotCSSInfo","width","height","unit","inputTypePasswordCSSInfo","caretCSSInfo","AuroraPasswordInput","manageAuroraPasswordInputShadowRootCSS","style","document","createElement","auroraPasswordInputShadowRoot","getElementsByTagName","shadowRoot","styleTextContent","textContent","shadow","appendChild","handleOninputPassword","inputTypePassword","shadowDotsContainer","caret","dotsContainer","dotsWidth","isDotFull","caretIndex","oninput","event","inputTypePasswordWidth","inputTypePasswordHeight","dot","createOneAuroraDot","elementInDotsContainers","children","arrayFromElementInDotsContainers","Array","prototype","slice","call","console","log","swap","i","length","createCaret","increasingNumber","classList","add","setInterval","remove","a","j","temporary","handleCaretMovePosition","styles","attachShadow","mode","type","HTMLElement","customElements","define","AuroraPasswordInputComponent"],"mappings":"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","sourcesContent":["import { View } from \"react-native\";\r\n\r\nconst dotCSSInfo = {\r\n  width: 10,\r\n  height: 10,\r\n  unit: \"px\",\r\n};\r\n\r\nconst inputTypePasswordCSSInfo = {\r\n  width: 200,\r\n  height: 100,\r\n  unit: \"px\",\r\n};\r\n\r\nconst caretCSSInfo = {};\r\n\r\nclass AuroraPasswordInput extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    let shadow = this.attachShadow({ mode: \"open\" });\r\n    this.shadow = shadow;\r\n    this.manageAuroraPasswordInputShadowRootCSS();\r\n\r\n    const shadowDotsContainer = document.createElement(\"div\");\r\n    shadowDotsContainer.classList.add(\"dotsContainer\");\r\n    const dotsContainer = document.createElement(\"div\");\r\n\r\n    const inputTypePassword = document.createElement(\"input\");\r\n    inputTypePassword.type = \"password\";\r\n    inputTypePassword.classList.add(\"input_type_password\");\r\n\r\n    const caret = this.createCaret();\r\n    shadow.appendChild(shadowDotsContainer);\r\n    shadow.appendChild(inputTypePassword);\r\n    shadow.appendChild(caret);\r\n\r\n    this.handleOninputPassword(\r\n      inputTypePassword,\r\n      shadowDotsContainer,\r\n      caret,\r\n      dotsContainer\r\n    );\r\n  }\r\n\r\n  manageAuroraPasswordInputShadowRootCSS = () => {\r\n    let style = document.createElement(\"style\");\r\n\r\n    const auroraPasswordInputShadowRoot = document.getElementsByTagName(\r\n      \"aurora-password-input\"\r\n    )[0].shadowRoot;\r\n\r\n    const styleTextContent = `\r\n    .input_type_password{\r\n      width:${inputTypePasswordCSSInfo.width}${inputTypePasswordCSSInfo.unit};\r\n      height:${inputTypePasswordCSSInfo.height}${inputTypePasswordCSSInfo.unit};\r\n      position:relative;\r\n      color:transparent;\r\n    }\r\n\r\n    .caret{\r\n      width:1px;\r\n      height:10px;\r\n      background-image: linear-gradient(to right, #00FF2F, #34EFC3,#94FFDA);\r\n    }\r\n    \r\n    .dotsContainer{\r\n      display:flex;\r\n      padding:12px;\r\n      position:absolute;\r\n      top:2px;\r\n      left:0;\r\n      z-index: 10;\r\n    }\r\n    \r\n    `;\r\n\r\n    style.textContent = styleTextContent;\r\n\r\n    this.shadow.appendChild(style);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLInputElement} inputTypePassword\r\n   * @param {HTMLDivElement} shadowDotsContainer\r\n   * @param {HTMLDivElement} caret\r\n   * @param {HTMLDivElement} dotsContainer\r\n   *\r\n   */\r\n  handleOninputPassword = (\r\n    inputTypePassword,\r\n    shadowDotsContainer,\r\n    caret,\r\n    dotsContainer\r\n  ) => {\r\n    let dotsWidth = 0;\r\n    let isDotFull = false;\r\n\r\n    let caretIndex = 0;\r\n    shadowDotsContainer.appendChild(caret);\r\n\r\n    inputTypePassword.oninput = (event) => {\r\n      const inputTypePasswordWidth = inputTypePasswordCSSInfo.width;\r\n      const inputTypePasswordHeight = inputTypePasswordCSSInfo.height;\r\n\r\n      const dot = this.createOneAuroraDot();\r\n      const elementInDotsContainers = shadowDotsContainer.children;\r\n      const arrayFromElementInDotsContainers = Array.prototype.slice.call(\r\n        elementInDotsContainers\r\n      );\r\n\r\n      console.log(\r\n        \"arrayFromElementInDotsContainers: \",\r\n        arrayFromElementInDotsContainers\r\n      );\r\n\r\n      this.swap(arrayFromElementInDotsContainers, caretIndex, caretIndex + 1);\r\n\r\n      for (let i = arrayFromElementInDotsContainers.length - 1; i >= 0; --i) {\r\n        console.log(arrayFromElementInDotsContainers[i]);\r\n\r\n        // dotsContainer.appendChild(arrayFromElementInDotsContainers[i]);\r\n      }\r\n\r\n      if (dotsWidth < inputTypePasswordWidth) {\r\n        shadowDotsContainer.appendChild(dot);\r\n      }\r\n    };\r\n  };\r\n\r\n  createCaret = () => {\r\n    const caret = document.createElement(\"div\");\r\n\r\n    let increasingNumber = 530;\r\n    caret.classList.add(\"caret\");\r\n\r\n    setInterval(() => {\r\n      caret.classList.remove(\"caret\");\r\n    }, increasingNumber);\r\n\r\n    setInterval(() => {\r\n      caret.classList.add(\"caret\");\r\n    }, increasingNumber + increasingNumber);\r\n\r\n    return caret;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLCollection} a\r\n   * @param {Number} i\r\n   * @param {Number} j\r\n   *\r\n   */\r\n  swap = (a, i, j) => {\r\n    const temporary = a[i];\r\n    a[i] = a[j];\r\n    a[j] = temporary;\r\n  };\r\n\r\n  handleCaretMovePosition = () => {};\r\n\r\n  createOneAuroraDot = () => {\r\n    const styles = `\r\n      height: ${dotCSSInfo.height}${dotCSSInfo.unit};\r\n      width: ${dotCSSInfo.width}${dotCSSInfo.unit};\r\n      background-image: linear-gradient(to right, #00FF2F, #34EFC3,#94FFDA);\r\n      clip-path: circle(30%);\r\n    `;\r\n    const dot = document.createElement(\"div\");\r\n    dot.style = styles;\r\n    return dot;\r\n  };\r\n}\r\n\r\ncustomElements.define(\"aurora-password-input\", AuroraPasswordInput);\r\n\r\nconst AuroraPasswordInputComponent = () => {\r\n  return <View></View>;\r\n};\r\n\r\nexport default AuroraPasswordInputComponent;\r\n"]},"metadata":{},"sourceType":"module"}