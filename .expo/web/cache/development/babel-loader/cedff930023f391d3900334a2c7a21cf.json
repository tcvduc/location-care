{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar dotCSSInfo = {\n  width: 10,\n  height: 10,\n  unit: \"px\"\n};\nvar inputTypePasswordCSSInfo = {\n  width: 200,\n  height: 100,\n  unit: \"px\"\n};\n\nvar AuroraPasswordInputComponent = function AuroraPasswordInputComponent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var attachShadow = function attachShadow(host) {\n    return undefined;\n  };\n\n  var handleTextInputChange = function handleTextInputChange(event) {\n    setInputValue(event.target.value);\n  };\n\n  return _jsx(View, {\n    children: _jsx(TextInput, {\n      onChange: handleTextInputChange,\n      value: inputValue,\n      style: styles.input_type_password\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  membrane: {\n    height: 100,\n    width: 200,\n    borderWidth: 1,\n    borderColor: \"#111\",\n    borderStyle: \"solid\"\n  },\n  input_type_password: {\n    width: inputTypePasswordCSSInfo.width,\n    height: inputTypePasswordCSSInfo.height,\n    position: \"relative\",\n    color: \"#111\"\n  }\n});\nexport default AuroraPasswordInputComponent;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/location-care/components/AuroraPasswordInput/AuroraPasswordInput.tsx"],"names":["useState","dotCSSInfo","width","height","unit","inputTypePasswordCSSInfo","AuroraPasswordInputComponent","inputValue","setInputValue","attachShadow","host","undefined","handleTextInputChange","event","target","value","styles","input_type_password","StyleSheet","create","membrane","borderWidth","borderColor","borderStyle","position","color"],"mappings":";AAAA,SAAoBA,QAApB,QAAoC,OAApC;;;;;AASA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAAnB;AAMA,IAAMC,wBAAwB,GAAG;AAC/BH,EAAAA,KAAK,EAAE,GADwB;AAE/BC,EAAAA,MAAM,EAAE,GAFuB;AAG/BC,EAAAA,IAAI,EAAE;AAHyB,CAAjC;;AAMA,IAAME,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzC,kBAAoCN,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAA6C;AAChE,WAAOC,SAAP;AACD,GAFD;;AAGA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAgB;AAC5CL,IAAAA,aAAa,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,SAAD;AACE,MAAA,QAAQ,EAAEH,qBADZ;AAEE,MAAA,KAAK,EAAEL,UAFT;AAGE,MAAA,KAAK,EAAES,MAAM,CAACC;AAHhB;AADF,IADF;AAYD,CArBD;;AAuBA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,MAAM,EAAE,GADA;AAERD,IAAAA,KAAK,EAAE,GAFC;AAGRmB,IAAAA,WAAW,EAAE,CAHL;AAIRC,IAAAA,WAAW,EAAE,MAJL;AAKRC,IAAAA,WAAW,EAAE;AALL,GADqB;AAQ/BN,EAAAA,mBAAmB,EAAE;AACnBf,IAAAA,KAAK,EAAEG,wBAAwB,CAACH,KADb;AAEnBC,IAAAA,MAAM,EAAEE,wBAAwB,CAACF,MAFd;AAGnBqB,IAAAA,QAAQ,EAAE,UAHS;AAInBC,IAAAA,KAAK,EAAE;AAJY;AARU,CAAlB,CAAf;AAiBA,eAAenB,4BAAf","sourcesContent":["import { LegacyRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  createElement,\r\n  TextInput,\r\n  input,\r\n} from \"react-native\";\r\n\r\nconst dotCSSInfo = {\r\n  width: 10,\r\n  height: 10,\r\n  unit: \"px\",\r\n};\r\n\r\nconst inputTypePasswordCSSInfo = {\r\n  width: 200,\r\n  height: 100,\r\n  unit: \"px\",\r\n};\r\n\r\nconst AuroraPasswordInputComponent = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const attachShadow = (host: View): LegacyRef<View> | undefined => {\r\n    return undefined;\r\n  };\r\n  const handleTextInputChange = (event: any) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n  // return <View ref={attachShadow} style={styles.membrane}></View>;\r\n  return (\r\n    <View>\r\n      <TextInput\r\n        onChange={handleTextInputChange}\r\n        value={inputValue}\r\n        style={styles.input_type_password}\r\n      />\r\n    </View>\r\n    // <View ref={attachShadow} style={styles.membrane}>\r\n\r\n    // </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  membrane: {\r\n    height: 100,\r\n    width: 200,\r\n    borderWidth: 1,\r\n    borderColor: \"#111\",\r\n    borderStyle: \"solid\",\r\n  },\r\n  input_type_password: {\r\n    width: inputTypePasswordCSSInfo.width,\r\n    height: inputTypePasswordCSSInfo.height,\r\n    position: \"relative\",\r\n    color: \"#111\",\r\n    // color: \"transparent\",\r\n  },\r\n});\r\n\r\nexport default AuroraPasswordInputComponent;\r\n"]},"metadata":{},"sourceType":"module"}