{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar dotCSSInfo = {\n  width: 10,\n  height: 10,\n  unit: \"px\"\n};\nvar inputTypePasswordCSSInfo = {\n  width: 100,\n  height: 20,\n  unit: \"px\"\n};\n\nfunction createOneAuroraDot() {\n  return _jsx(View, {\n    style: styles.dot\n  });\n}\n\nvar AuroraPasswordInputComponent = function AuroraPasswordInputComponent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var attachShadow = function attachShadow(host) {\n    return undefined;\n  };\n\n  var handleTextInputChange = function handleTextInputChange(event) {\n    setInputValue(event.target.value);\n  };\n\n  var temporary = [];\n\n  for (var i = 1; i <= 8; ++i) {\n    temporary.push(0);\n  }\n\n  return _jsxs(View, {\n    style: styles.membrane,\n    children: [_jsx(TextInput, {\n      onChange: handleTextInputChange,\n      value: inputValue,\n      style: styles.input_type_password\n    }), _jsx(View, {\n      style: styles.dots_container,\n      children: temporary.map(function (e, index) {\n        return _jsx(View, {\n          style: styles.dot\n        }, index);\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  membrane: {\n    height: 20,\n    width: 100,\n    borderWidth: 1,\n    borderColor: \"#111\",\n    borderStyle: \"solid\"\n  },\n  input_type_password: {\n    borderWidth: 1,\n    borderColor: \"#111\",\n    borderStyle: \"solid\",\n    width: inputTypePasswordCSSInfo.width,\n    height: inputTypePasswordCSSInfo.height,\n    position: \"relative\",\n    color: \"#111\"\n  },\n  dot: {\n    height: dotCSSInfo.height,\n    width: dotCSSInfo.width,\n    backgroundImage: \"linear-gradient(to right, #00FF2F, #34EFC3,#94FFDA)\",\n    clipPath: \"circle(30%);\"\n  },\n  dots_container: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 12,\n    position: \"absolute\",\n    top: 30,\n    left: 0,\n    zIndex: 10\n  }\n});\nexport default AuroraPasswordInputComponent;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/location-care/components/AuroraPasswordInput/AuroraPasswordInput.tsx"],"names":["useState","dotCSSInfo","width","height","unit","inputTypePasswordCSSInfo","createOneAuroraDot","styles","dot","AuroraPasswordInputComponent","inputValue","setInputValue","attachShadow","host","undefined","handleTextInputChange","event","target","value","temporary","i","push","membrane","input_type_password","dots_container","map","e","index","StyleSheet","create","borderWidth","borderColor","borderStyle","position","color","backgroundImage","clipPath","display","flexDirection","padding","top","left","zIndex"],"mappings":"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","sourcesContent":["import { LegacyRef, useState } from \"react\";\r\nimport { View, StyleSheet, createElement, TextInput } from \"react-native\";\r\n\r\nconst dotCSSInfo = {\r\n  width: 10,\r\n  height: 10,\r\n  unit: \"px\",\r\n};\r\n\r\nconst inputTypePasswordCSSInfo = {\r\n  width: 100,\r\n  height: 20,\r\n  unit: \"px\",\r\n};\r\n\r\nfunction createOneAuroraDot() {\r\n  return <View style={styles.dot}></View>;\r\n}\r\n\r\nconst AuroraPasswordInputComponent = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const attachShadow = (host: View): LegacyRef<View> | undefined => {\r\n    return undefined;\r\n  };\r\n  const handleTextInputChange = (event: any) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n  let temporary = [];\r\n\r\n  for (let i = 1; i <= 8; ++i) {\r\n    temporary.push(0);\r\n  }\r\n  return (\r\n    <View style={styles.membrane}>\r\n      <TextInput\r\n        onChange={handleTextInputChange}\r\n        value={inputValue}\r\n        style={styles.input_type_password}\r\n      />\r\n\r\n      <View style={styles.dots_container}>\r\n        {temporary.map((e, index) => (\r\n          <View key={index} style={styles.dot}></View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  membrane: {\r\n    height: 20,\r\n    width: 100,\r\n    borderWidth: 1,\r\n    borderColor: \"#111\",\r\n    borderStyle: \"solid\",\r\n  },\r\n  input_type_password: {\r\n    borderWidth: 1,\r\n    borderColor: \"#111\",\r\n    borderStyle: \"solid\",\r\n    width: inputTypePasswordCSSInfo.width,\r\n    height: inputTypePasswordCSSInfo.height,\r\n    position: \"relative\",\r\n    color: \"#111\",\r\n  },\r\n  dot: {\r\n    height: dotCSSInfo.height,\r\n    width: dotCSSInfo.width,\r\n    backgroundImage: \"linear-gradient(to right, #00FF2F, #34EFC3,#94FFDA)\",\r\n    clipPath: \"circle(30%);\",\r\n  },\r\n  dots_container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: 12,\r\n    position: \"absolute\",\r\n    // top: 2,\r\n    top: 30,\r\n\r\n    left: 0,\r\n    zIndex: 10,\r\n  },\r\n});\r\n\r\nexport default AuroraPasswordInputComponent;\r\n"]},"metadata":{},"sourceType":"module"}