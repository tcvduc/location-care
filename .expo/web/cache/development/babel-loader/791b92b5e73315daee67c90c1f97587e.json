{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { appColors } from \"../../config/global.variables\";\nimport React, { useState } from \"react\";\nimport Canvas from \"../Canvas/Canvas\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar commonBorderRadiusValue = 5;\nvar commonButtonPaddingValue = 12;\nexport default function Home(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenSignUp = _useState2[0],\n      setIsOpenSignUp = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpenSignIn = _useState4[0],\n      setIsOpenSignIn = _useState4[1];\n\n  var handleSignInButtonOnPress = function handleSignInButtonOnPress() {\n    setIsOpenSignIn(!isOpenSignIn);\n  };\n\n  var handleCanvas = function handleCanvas(canvas) {\n    var c = canvas.getContext(\"2d\");\n    var w = canvas.width;\n    var h = canvas.height;\n    c.moveTo(0, 0);\n    c.lineTo(w, h);\n    c.stroke();\n  };\n\n  return _jsxs(View, {\n    style: styles.membrane,\n    children: [_jsx(Text, {\n      children: \"dsadasd\"\n    }), _jsx(Canvas, {\n      ref: handleCanvas,\n      style: styles.canvas\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  membrane: {\n    backgroundColor: appColors.secondary,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"16%\"\n  },\n  canvas: {\n    height: 100,\n    width: 200,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderColor: \"black\"\n  },\n  layouting: {\n    borderWidth: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#111\"\n  },\n  appName: {\n    color: appColors.primary,\n    fontFamily: \"sans-serif\",\n    fontWeight: \"600\",\n    marginBottom: 28,\n    fontSize: 32\n  },\n  logo: {\n    marginTop: 120,\n    height: 80,\n    width: 100,\n    marginBottom: 24\n  }\n});","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/location-care/components/SignInScreen/SignInScreen.tsx"],"names":["appColors","React","useState","Canvas","commonBorderRadiusValue","commonButtonPaddingValue","Home","props","navigation","isOpenSignUp","setIsOpenSignUp","isOpenSignIn","setIsOpenSignIn","handleSignInButtonOnPress","handleCanvas","canvas","c","getContext","w","width","h","height","moveTo","lineTo","stroke","styles","membrane","StyleSheet","create","backgroundColor","secondary","display","flexDirection","alignItems","paddingTop","borderStyle","borderWidth","borderColor","layouting","appName","color","primary","fontFamily","fontWeight","marginBottom","fontSize","logo","marginTop"],"mappings":";;;;AAYA,SAASA,SAAT;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP;;;AAMA,IAAMC,uBAAuB,GAAG,CAAhC;AACA,IAAMC,wBAAwB,GAAG,EAAjC;AAMA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AACvC,MAAQC,UAAR,GAAuBD,KAAvB,CAAQC,UAAR;;AACA,kBAAwCN,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOO,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAwCR,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACtCD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAiB;AACpC,QAAMC,CAAC,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV;AACA,QAAMC,CAAC,GAAGH,MAAM,CAACI,KAAjB;AACA,QAAMC,CAAC,GAAGL,MAAM,CAACM,MAAjB;AACAL,IAAAA,CAAC,CAACM,MAAF,CAAS,CAAT,EAAY,CAAZ;AACAN,IAAAA,CAAC,CAACO,MAAF,CAASL,CAAT,EAAYE,CAAZ;AACAJ,IAAAA,CAAC,CAACQ,MAAF;AACD,GAPD;;AASA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEE,KAAC,MAAD;AAAQ,MAAA,GAAG,EAAEZ,YAAb;AAA2B,MAAA,KAAK,EAAEW,MAAM,CAACV;AAAzC,MAFF;AAAA,IADF;AAOD;AAED,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,QAAQ,EAAE;AACRG,IAAAA,eAAe,EAAE7B,SAAS,CAAC8B,SADnB;AAERT,IAAAA,MAAM,EAAE,MAFA;AAGRU,IAAAA,OAAO,EAAE,MAHD;AAIRC,IAAAA,aAAa,EAAE,QAJP;AAKRC,IAAAA,UAAU,EAAE,QALJ;AAORC,IAAAA,UAAU,EAAE;AAPJ,GADqB;AAU/BnB,EAAAA,MAAM,EAAE;AACNM,IAAAA,MAAM,EAAE,GADF;AAENF,IAAAA,KAAK,EAAE,GAFD;AAGNgB,IAAAA,WAAW,EAAE,OAHP;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAE;AALP,GAVuB;AAiB/BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,WAAW,EAAE,CADJ;AAETD,IAAAA,WAAW,EAAE,OAFJ;AAGTE,IAAAA,WAAW,EAAE;AAHJ,GAjBoB;AAsB/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAExC,SAAS,CAACyC,OADV;AAEPC,IAAAA,UAAU,EAAE,YAFL;AAGPC,IAAAA,UAAU,EAAE,KAHL;AAKPC,IAAAA,YAAY,EAAE,EALP;AAMPC,IAAAA,QAAQ,EAAE;AANH,GAtBsB;AA8B/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,GADP;AAEJ1B,IAAAA,MAAM,EAAE,EAFJ;AAGJF,IAAAA,KAAK,EAAE,GAHH;AAIJyB,IAAAA,YAAY,EAAE;AAJV;AA9ByB,CAAlB,CAAf","sourcesContent":["import {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  NativeSyntheticEvent,\r\n  TextInputChangeEventData,\r\n} from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport logo from \"../../assets/images/logo-ver2.png\";\r\nimport { appColors, centerForAlignItems } from \"../../config/global.variables\";\r\nimport React, { useState } from \"react\";\r\n// import Canvas from \"react-native-canvas\";\r\nimport Canvas from \"../Canvas/Canvas\";\r\n\r\nimport PhoneDialCodeShortDescription from \"../PhoneDialCode/PhoneDialCodeShortDescription\";\r\nimport PhoneDialCodeFullDescription from \"../PhoneDialCode/PhoneDialCodeFullDescription\";\r\nimport PhoneDialCode from \"../PhoneDialCode/PhoneDialCode\";\r\n\r\nconst commonBorderRadiusValue = 5;\r\nconst commonButtonPaddingValue = 12;\r\n\r\ntype canvas = {\r\n  getContext: () => {};\r\n};\r\n\r\nexport default function Home(props: any) {\r\n  const { navigation } = props;\r\n  const [isOpenSignUp, setIsOpenSignUp] = useState(false);\r\n  const [isOpenSignIn, setIsOpenSignIn] = useState(false);\r\n\r\n  const handleSignInButtonOnPress = () => {\r\n    setIsOpenSignIn(!isOpenSignIn);\r\n  };\r\n\r\n  const handleCanvas = (canvas: any) => {\r\n    const c = canvas.getContext(\"2d\");\r\n    const w = canvas.width;\r\n    const h = canvas.height;\r\n    c.moveTo(0, 0);\r\n    c.lineTo(w, h);\r\n    c.stroke();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.membrane}>\r\n      <Text>dsadasd</Text>\r\n      <Canvas ref={handleCanvas} style={styles.canvas}></Canvas>\r\n      {/* <Canvas ref={handleCanvas} style={styles.canvas}></Canvas> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  membrane: {\r\n    backgroundColor: appColors.secondary,\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n    paddingTop: \"16%\",\r\n  },\r\n  canvas: {\r\n    height: 100,\r\n    width: 200,\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n  },\r\n  layouting: {\r\n    borderWidth: 5,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#111\",\r\n  },\r\n  appName: {\r\n    color: appColors.primary,\r\n    fontFamily: \"sans-serif\",\r\n    fontWeight: \"600\",\r\n    // marginTop: 12,\r\n    marginBottom: 28,\r\n    fontSize: 32,\r\n  },\r\n  logo: {\r\n    marginTop: 120,\r\n    height: 80,\r\n    width: 100,\r\n    marginBottom: 24,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}